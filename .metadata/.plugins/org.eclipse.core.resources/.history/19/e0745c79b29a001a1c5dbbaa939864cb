/* Module Name : USART
 * File Name   : USART_interface.h
 * Author      : Bishoy Nabil
 * Version     : 1.0
 * Date        : 13/4/2020 */

#ifndef UART_INTERFACE_H_
#define UART_INTERFACE_H_

#include "STD_TYPES.h"

/* choose which USART you will use and pass it at copy_u8USARTNum */
#define USART_1                                 0
#define USART_2                                 1
#define USART_3                                 2
#define USART_4                                 3
#define USART_5                                 4
/* choose which flag you wanna read and pass it at copy_u8Flag */
#define TXE                                     ((u32)0x00000080)
#define RXNE                                    ((u32)0x00000020)
/* choose which Baud Rate you wanna work with and pass it at copy_u32BaudRate (USART1(APB2), clock 72MHz) */
#define BR_2400                                 ((u32)0x00007530)
#define BR_9600                                 ((u32)0x000001D4)
#define BR_19200                                ((u32)0x000000EA)
#define BR_57600                                ((u32)0x0000004E)
#define BR_115200                               ((u32)0x00000027)
#define BR_230400                               ((u32)0x00000013)
#define BR_460800                               ((u32)0x00000009)
#define BR_921600                               ((u32)0x00000004)
#define BR_2250000                              ((u32)0x00000002)
#define BR_45000000                             ((u32)0x00000001)
/* choose which number of stop bits and pass it at copy_u8StopBits */
#define STOPBITS_ONE                            ((u32)0x00000000)
#define STOPBITS_HALF                           ((u32)0x00001000)
#define STOPBITS_TWO                            ((u32)0x00002000)
#define STOPBITS_ONE_AND_HALF                   ((u32)0x00003000)
/* choose which Parity system you wanna use and pass it at copy_u8Parity */
#define NO_PARITY                               ((u32)0x00000000)
#define EVEN_PARITY                             ((u32)0x00000400)
#define ODD_PARITY                              ((u32)0x00000600)
/* choose word length size and put it at copy_u32WordLength but take care that Parity bit if enabled will be part of the word length */
#define DATABITS_8                              ((u32)0x00000000)
#define DATABITS_9                              ((u32)0x00001000)
/* choose which flag you want to set and pass it at copy_u8Flag */
#define TE                                      ((u32)0x00000008)
#define RE                                      ((u32)0x00000004)
/*  */
#define TX_INTERRUPT_ENABLED                     ((u32)0x00000080)
#define RX_INTERRUPT_ENABLED                     ((u32)0x00000020)
#define TX_INTERRUPT_DISABLED                    ((u32)0x00000000)
#define RX_INTERRUPT_DISABLED                    ((u32)0x00000000)

extern ErrorStatus USART_Init(u8 copy_u8USARTNum);
extern ErrorStatus USART_Send(u8 copy_u8USARTNum, u8 copy_u8Data);
extern ErrorStatus USART_Receive(u8 copy_u8USARTNum, u8* copy_pu8ReceivedData);
extern ErrorStatus USART_SetFlags(u8 copy_u8USARTNum, u32 copy_u32Flag);
extern ErrorStatus USART_ReadFlags(u8 copy_u8USARTNum, u32 copy_u32Flag, u8* copy_pu8FlagValue);
extern Status USART_Config(u8 copy_u8USARTNum, u32 copy_u32BaudRate, u32 copy_u32StopBits, u32 copy_u32Parity, u32 copy_u32WordLength);

#endif /* UART_INTERFACE_H_ */
